#pragma once
#include <iostream> 
#include <cstdlib> 
#include <string> 
#include<locale>
#include <exception>

class Shifr 
{ 
private: 
	enum {sizeEN=26};
	char shift(const char c);
		int key;
		int k;
string beforeEncrypt(const string s);
	void beforeDecrypt(const string s);
public: 
	Shifr(int key); 
	string shifrovka( string str);
	string deshifrovka(const string str);
	~Shifr();
public:
// exceptions
	class Exception: public exception
	{
	private:
		string mess;
	public:
		Exception(string msg);
		virtual const char* what();
	};

	class keyException: public Exception
	{
	public:
		keyException(unsigned int key);
	};



	class charException: public Exception
	{
	public:
		charException(unsigned char c);
	};
};






#endif
